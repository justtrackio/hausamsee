include:
  - docker/spark/docker-compose.yml

services:
  catalog:
    container_name: hausamsee_catalog
    image: ghcr.io/projectnessie/nessie:latest
    environment:
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      NESSIE_VERSION_STORE_TYPE: JDBC2
      NESSIE_VERSION_STORE_PERSIST_JDBC_DATASOURCE: postgresql
      NESSIE_CATALOG_DEFAULT_WAREHOUSE: warehouse
      NESSIE_CATALOG_WAREHOUSES_WAREHOUSE_LOCATION: s3://warehouse
      NESSIE_CATALOG_SERVICE_S3_DEFAULT_OPTIONS_REGION: eu-central-1
      NESSIE_CATALOG_SERVICE_S3_DEFAULT_OPTIONS_AUTH_TYPE: APPLICATION_GLOBAL
      NESSIE_CATALOG_SERVICE_S3_DEFAULT_OPTIONS_ENDPOINT: http://storage:9000
      NESSIE_CATALOG_SERVICE_S3_DEFAULT_OPTIONS_PATH_STYLE_ACCESS: true
      QUARKUS_DATASOURCE_POSTGRESQL_JDBC_URL: jdbc:postgresql://catalog_postgres:5432/metastore_db
      QUARKUS_DATASOURCE_POSTGRESQL_USERNAME: your_username
      QUARKUS_DATASOURCE_POSTGRESQL_PASSWORD: your_password
    ports:
      - 19120:19120
    depends_on:
      - catalog_postgres

  catalog_postgres:
    container_name: hausamsee_catalog_postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: your_username
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: metastore_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redpanda:
    container_name: hausamsee_redpanda
    image: docker.redpanda.com/redpandadata/redpanda:v25.1.7
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
    ports:
      - 19092:19092
      - 18081:18081

  redpanda-console:
    container_name: hausamsee_redpanda_console
    image: docker.redpanda.com/redpandadata/console:v3.1.2
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
        schemaRegistry:
          enabled: true
          urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - 8020:8080

  storage:
    container_name: hausamsee_storage
    image: quay.io/minio/minio:RELEASE.2025-06-13T11-33-47Z
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    ports:
      - 9001:9001
      - 9000:9000
    command: [ "server", "/data", "--console-address", ":9001" ]
    volumes:
      - storage_data:/data

  storage_createbucket:
    image: quay.io/minio/mc:RELEASE.2025-05-21T01-59-54Z
    depends_on:
      - storage
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set dockerminio http://storage:9000 admin password;
      /usr/bin/mc mb dockerminio/warehouse;
      exit 0;
      "

  trino:
    container_name: hausamsee_trino
    ports:
      - "8010:8080"
    image: "trinodb/trino:475"
    volumes:
      - ./docker/trino/catalog:/etc/trino/catalog

volumes:
  postgres_data:
  storage_data: